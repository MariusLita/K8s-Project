version: 0.1
component: build
timeoutInSeconds: 6000
runAs: root
shell: bash
env:
  exportedVariables:
    - BUILDRUN_HASH


steps:
  - type: Command
    name: "Define unique image tag"
    timeoutInSeconds: 40
    command: |
      export BUILDRUN_HASH=`echo ${OCI_BUILD_RUN_ID} | rev | cut -c 1-7`
      echo "BUILDRUN_HASH: " $BUILDRUN_HASH

  - type: Command
    name: "Check JDK version"
    timeoutInSeconds: 40
    command: |
      echo Current version is $(java -version 2>&1)

  - type: Command
    name: "Build the artifact"
    timeoutInSeconds: 40
    command: |
      echo "Start bulding the artifact"
      mvn clean package
      echo "Build succesfully"
      ls target

  - type: Command
    timeoutInSeconds: 1200
    name: "Build container image"
    command: |
      echo "OCI_PRIMARY_SOURCE_DIR: " ${OCI_PRIMARY_SOURCE_DIR}
      echo pwd is : $(pwd)
      cd ${OCI_PRIMARY_SOURCE_DIR}
      docker build --pull --rm -t oke_app_base .      
      echo "Succesfully build the image" 
      docker images
     
outputArtifacts:
  - name: oke_app_base
    type: DOCKER_IMAGE
    location: oke_app_base:latest

  - name: tomcat-app
    type: BINARY
    location: ${OCI_PRIMARY_SOURCE_DIR}/kubeFiles/tomcat-app.yaml

  - name: tomcat-svc
    type: BINARY
    location: ${OCI_PRIMARY_SOURCE_DIR}/kubeFiles/tomcat-svc.yaml

  - name: secret
    type: BINARY
    location: ${OCI_PRIMARY_SOURCE_DIR}/kubeFiles/secret.yaml

  - name: mysql-app
    type: BINARY
    location: ${OCI_PRIMARY_SOURCE_DIR}/kubeFiles/mysql-app.yaml

  - name: mysql-init-script 
    type: BINARY
    location: ${OCI_PRIMARY_SOURCE_DIR}/kubeFiles/mysql-init-script.yaml

  - name: mysql-svc
    type: BINARY
    location: ${OCI_PRIMARY_SOURCE_DIR}/kubeFiles/mysql-svc.yaml

  - name: nginx-controller
    type: BINARY
    location: ${OCI_PRIMARY_SOURCE_DIR}/kubeFiles/nginx-controller.yaml

  - name: ingress
    type: BINARY
    location: ${OCI_PRIMARY_SOURCE_DIR}/kubeFiles/ingress.yaml